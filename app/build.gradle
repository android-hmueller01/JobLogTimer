apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    namespace = "de.euhm.jlt"
    compileSdk 36

    /*
    V7: Android 2.1.x	ECLAIR_MR1
    V8: Android 2.2.x	FROYO
    V9:  Android 2.3	GINGERBREAD
    V11: Android 3.0.x	HONEYCOMB
    V14: Android 4.0	ICE_CREAM_SANDWICH
    V16: Android 4.1.x	JELLY_BEAN
    V19: Android 4.4	KITKAT
    V21: Android 5.0	LOLLIPOP
    V22: Android 5.1.1	LOLLIPOP
    V23: Android 6.0	MARSHMALLOW
    V24: Android 7.0	NOUGAT
    V25: Android 7.1.1	NOUGAT
    V26: Android 8.0    OREO
    V27: Android 8.1    OREO
    V28: Android 9      PIE
    V29: Android 10     Q
    V30: Android 11     R
    V31: Android 12     S
    V32: Android 12L
    V33: Android 13     Tiramisu
    V34: Android 14     UpsideDownCake
    V35: Android 15     VanillaIceCreamSandwich
    V36: Android 16     WetW
    */
    defaultConfig {
        applicationId "de.euhm.jlt"
        minSdk 21
        targetSdk 35
        versionCode 18
        versionName "0.22b"
    }

    signingConfigs {
        release {
            keyAlias 'alias'
            keyPassword ''
            storeFile file('JobLogTimer.keystore')
            storePassword ''
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'com.google.android.material:material:1.12.0'
}

System.setProperty('java.awt.headless', 'false')
import groovy.swing.SwingBuilder

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':app:packageRelease')) {
        def password = ""

        if (System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true,
                        title: "Enter password",
                        alwaysOnTop: true,
                        resizable: false,
                        locationRelativeTo: null,
                        pack: true,
                        show: true
                ) {
                    vbox {
                        label(text: "Please enter store/key password: ")
                        input = passwordField()
                        button(defaultButton: true,
                                text: 'OK',
                                actionPerformed: {
                                    password = input.password.toString()
                                    dispose()
                                })
                    }
                }
            }
        } else {
            password = System.console().readPassword("\nEnter password: ")
        }

        if (password.size() <= 0) {
            throw new InvalidUserDataException("Empty password")
        }

        // set signing config key passwords
        android.signingConfigs.release.storePassword = new String(password)
        android.signingConfigs.release.keyPassword = new String(password)
    }
}